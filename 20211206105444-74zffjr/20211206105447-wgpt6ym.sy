{
	"ID": "20211206105447-wgpt6ym",
	"Spec": "1",
	"Type": "NodeDocument",
	"Properties": {
		"id": "20211206105447-wgpt6ym",
		"scroll": "{\u0026quot;startId\u0026quot;:\u0026quot;20211206105447-y531y5w\u0026quot;,\u0026quot;endId\u0026quot;:\u0026quot;20221031083450-rnodz36\u0026quot;,\u0026quot;scrollTop\u0026quot;:1428.6666259765625,\u0026quot;focusId\u0026quot;:\u0026quot;20211212184011-flctj40\u0026quot;,\u0026quot;focusStart\u0026quot;:0,\u0026quot;focusEnd\u0026quot;:0}",
		"title": "go基础语法",
		"updated": "20221031083500"
	},
	"Children": [
		{
			"ID": "20211206105447-y531y5w",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20211206105447-y531y5w",
				"updated": "20211206105603"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "if-else 语句",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211206105604-zal6uzh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211206105604-zal6uzh",
				"updated": "20211206105616"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意点：",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211206105616-fo3f6g6",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20211206105616-fo3f6g6",
				"updated": "20211206105621"
			},
			"Children": [
				{
					"ID": "20211206105621-52i237z",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20211206105621-52i237z",
						"updated": "20211206105621"
					},
					"Children": [
						{
							"ID": "20211206105621-0pg1lox",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211206105621-0pg1lox",
								"updated": "20211206105701"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "}与 else 是同一行的，因为不是同一行的话编译器会在}后面加上；",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20211206105716-776vhzb",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20211206105716-776vhzb",
						"updated": "20211206105716"
					},
					"Children": [
						{
							"ID": "20211206105716-a1sd7u1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211206105716-a1sd7u1",
								"updated": "20211206105809"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "可以使用 if statement;condition{}进行编写，但 statement 初始化的是临时变量",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211206105927-kic2xnn",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20211206105927-kic2xnn",
				"updated": "20211206105934"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "for 循环",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211206110014-4ru9ghr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211206110014-4ru9ghr",
				"updated": "20211206110017"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "语法",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211206105949-y8azf5a",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "Z28=",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20211206105949-y8azf5a",
				"updated": "20211206110011"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28=",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "for initialisation; condition; post {  \n}\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211206105934-rbdkbww",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211206105934-rbdkbww",
				"updated": "20211206105938"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "注意点：",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211206105938-766k607",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20211206105938-766k607",
				"updated": "20211206110127"
			},
			"Children": [
				{
					"ID": "20211206105942-y0n64no",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20211206105942-y0n64no",
						"updated": "20211206105942"
					},
					"Children": [
						{
							"ID": "20211206105942-wzdr0yw",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211206105942-wzdr0yw",
								"updated": "20211206110029"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "在 for 循环中声明的变量只能在循环体内访问，因此 i 不能够在循环体外访问。",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20211206110126-ej4w7ry",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20211206110126-ej4w7ry",
						"updated": "20211206110127"
					},
					"Children": [
						{
							"ID": "20211206110126-mogo2g1",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211206110126-mogo2g1",
								"updated": "20211206110127"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "分号也可以省略",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211206110034-6i4udpb",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211206110034-6i4udpb",
				"updated": "20211206110042"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "break",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211206110043-07czsdl",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211206110043-07czsdl",
				"updated": "20211206110045"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "continue",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211206110152-1g9llyr",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211206110152-1g9llyr",
				"updated": "20211206110158"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "无限循环",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211206110159-lmuqecd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "Z28=",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20211206110159-lmuqecd",
				"updated": "20211206110215"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28=",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "for {  \n}\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211206110216-5lyl53c",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20211206110216-5lyl53c",
				"updated": "20211206110232"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "switch 语句",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211206110232-4c8okmj",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "Z28=",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20211206110232-4c8okmj",
				"updated": "20211212183935"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28=",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "package main\n\nimport (\n    \"fmt\"\n)\n\nfunc main() {\n    letter := \"i\"\n    switch letter {\n    case \"a\", \"e\", \"i\", \"o\", \"u\": // 一个选项多个表达式\n        fmt.Println(\"vowel\")\n    default:\n        fmt.Println(\"not a vowel\")\n    }\n}\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212183959-uqarz9r",
			"Type": "NodeSuperBlock",
			"Properties": {
				"id": "20211212183959-uqarz9r",
				"updated": "20211212184009"
			},
			"Children": [
				{
					"Type": "NodeSuperBlockOpenMarker",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeSuperBlockLayoutMarker",
					"Data": "col",
					"Properties": {
						"id": ""
					}
				},
				{
					"ID": "20211212183939-5eamhzc",
					"Type": "NodeParagraph",
					"Properties": {
						"id": "20211212183939-5eamhzc",
						"updated": "20211212184009"
					},
					"Children": [
						{
							"Type": "NodeTextMark",
							"Properties": {
								"id": ""
							},
							"TextMarkType": "strong",
							"TextMarkTextContent": "fall through"
						}
					]
				},
				{
					"ID": "20211212183427-na9ou30",
					"Type": "NodeCodeBlock",
					"IsFencedCodeBlock": true,
					"CodeBlockFenceChar": 96,
					"CodeBlockFenceLen": 3,
					"CodeBlockOpenFence": "YGBg",
					"CodeBlockInfo": "Z28=",
					"CodeBlockCloseFence": "YGBg",
					"Properties": {
						"id": "20211212183427-na9ou30",
						"updated": "20211212183931"
					},
					"Children": [
						{
							"Type": "NodeCodeBlockFenceOpenMarker",
							"Data": "```",
							"CodeBlockFenceLen": 3,
							"Properties": {
								"id": ""
							}
						},
						{
							"Type": "NodeCodeBlockFenceInfoMarker",
							"CodeBlockInfo": "Z28=",
							"Properties": {
								"id": ""
							}
						},
						{
							"Type": "NodeCodeBlockCode",
							"Data": "func main() {\n\n    switch num := number(); { // num is not a constant\n    case num \u003c 50:\n        fmt.Printf(\"%d is lesser than 50\\n\", num)\n        fallthrough\n    case num \u003c 100:\n        fmt.Printf(\"%d is lesser than 100\\n\", num)\n        fallthrough\n    case num \u003c 200:\n        fmt.Printf(\"%d is lesser than 200\", num)\n    }\n\n}\n",
							"Properties": {
								"id": ""
							}
						},
						{
							"Type": "NodeCodeBlockFenceCloseMarker",
							"Data": "```",
							"CodeBlockFenceLen": 3,
							"Properties": {
								"id": ""
							}
						}
					]
				},
				{
					"Type": "NodeSuperBlockCloseMarker",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212184011-flctj40",
			"Type": "NodeHeading",
			"HeadingLevel": 2,
			"Properties": {
				"id": "20211212184011-flctj40",
				"updated": "20211212185059"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "## ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "数组与切片",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221031082856-d1hnl09",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221031082856-d1hnl09",
				"updated": "20221031082903"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "数组初始化",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212185101-tvwi2pn",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212185101-tvwi2pn",
				"updated": "20211212185138"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "var a [3]int vs [4]int",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212185140-sc9bvz2",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212185140-sc9bvz2",
				"updated": "20211212185159"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "a := [3]int {12,34}",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212185202-99kmgjh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212185202-99kmgjh",
				"updated": "20211212185209"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "[...]int",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212185210-70z3rl6",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212185210-70z3rl6",
				"updated": "20211212185222"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "len()",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212185255-vkea02n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "Z28=",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20211212185255-vkea02n",
				"updated": "20221031083245"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28=",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "a := [3][2]string{\n        {\"lion\", \"tiger\"},\n        {\"cat\", \"dog\"},\n        {\"pigeon\", \"peacock\"}, // this comma is necessary. The compiler will complain if you omit this comma\n    }\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221031083252-z3ltd2m",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221031083252-z3ltd2m",
				"updated": "20221031083256"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "数组的遍历",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212185223-hekqtp8",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212185223-hekqtp8",
				"updated": "20211212185227"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "i,v=range a",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212185300-5u31t7u",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "Z28=",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20211212185300-5u31t7u",
				"updated": "20221031083237"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28=",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "func printarray(a [3][2]string) {\n    for _, v1 := range a {\n        for _, v2 := range v1 {\n            fmt.Printf(\"%s \", v2)\n        }\n        fmt.Printf(\"\\n\")\n    }\n}\n\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212191648-cvt2eg4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212191648-cvt2eg4",
				"updated": "20211212191703"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其是值类型",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221031082717-9klc4a2",
			"Type": "NodeHeading",
			"HeadingLevel": 3,
			"Properties": {
				"id": "20221031082717-9klc4a2",
				"updated": "20221031082847"
			},
			"Children": [
				{
					"Type": "NodeHeadingC8hMarker",
					"Data": "### ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeText",
					"Data": "多维数组",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221031082947-s4w99m3",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20221031082947-s4w99m3",
				"updated": "20221031083009"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "// Step 1: 创建数组\n    values := [][]int{}\n\n    // Step 2: 使用 append() 函数向空的二维数组添加两行一维数组\n    row1 := []int{1, 2, 3}\n    row2 := []int{4, 5, 6}\n    values = append(values, row1)\n    values = append(values, row2)\n\na := [3][4]int{  \n {0, 1, 2, 3} ,   /*  第一行索引为 0 */\n {4, 5, 6, 7} ,   /*  第二行索引为 1 */\n {8, 9, 10, 11},   /* 第三行索引为 2 */\n}\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212191718-8kyjoqi",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212191718-8kyjoqi",
				"updated": "20211212191726"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "切片",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212191739-5gdlpef",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "Z28=",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20211212191739-5gdlpef",
				"updated": "20211212191754"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28=",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "c:==[]int{7,8}\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212191756-90vbep3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212191756-90vbep3",
				"updated": "20211212191908"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "其有 len 和 cap 两种属性，len 是获取该切片的长度，cap 则是获取其第一个元素到其映射的底层数组的最后一个元素的容量。",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212191919-0voz6r3",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212191919-0voz6r3",
				"updated": "20211212191936"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "对切片的修改也会反映在数组中",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212191936-8rqfp8n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "Z28=",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20211212191936-8rqfp8n",
				"updated": "20211212192644"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28=",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "func make（[]T，len，cap）\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212192702-wjurtme",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "Z28=",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20211212192702-wjurtme",
				"updated": "20211212192705"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28=",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "func main() {\n    cars := []string{\"Ferrari\", \"Honda\", \"Ford\"}\n    fmt.Println(\"cars:\", cars, \"has old length\", len(cars), \"and capacity\", cap(cars)) // capacity of cars is 3\n    cars = append(cars, \"Toyota\")\n    fmt.Println(\"cars:\", cars, \"has new length\", len(cars), \"and capacity\", cap(cars)) // capacity of cars is doubled to 6\n}\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212192715-2lkno24",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212192715-2lkno24",
				"updated": "20211212192733"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "names==nil(零值)",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212192734-xkpy58n",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "Z28=",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20211212192734-xkpy58n",
				"updated": "20211212192814"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28=",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "func main() {\n    veggies := []string{\"potatoes\", \"tomatoes\", \"brinjal\"}\n    fruits := []string{\"oranges\", \"apples\"}\n    food := append(veggies, fruits...)\n    fmt.Println(\"food:\",food)\n}\nfunc main() {  \n    var names []string //zero value of a slice is nil\n    if names == nil {\n        fmt.Println(\"slice is nil going to append\")\n        names = append(names, \"John\", \"Sebastian\", \"Vinay\")\n        fmt.Println(\"names contents:\",names)\n    }\n}\n\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212192952-6qt8l1m",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212192952-6qt8l1m",
				"updated": "20211212192952"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "因此，当切片作为参数传递给函数时，函数内所做的更改也会在函数外可见。",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212193009-rs519jv",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212193009-rs519jv",
				"updated": "20211212193010"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "一种解决方法是使用 ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"id": ""
					},
					"TextMarkType": "a",
					"TextMarkAHref": "https://golang.org/pkg/builtin/#copy",
					"TextMarkTextContent": "copy"
				},
				{
					"Type": "NodeText",
					"Data": " 函数 ",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeTextMark",
					"Properties": {
						"id": ""
					},
					"TextMarkType": "code",
					"TextMarkTextContent": "func copy(dst，src[]T)int"
				},
				{
					"Type": "NodeText",
					"Data": " 来生成一个切片的副本。这样我们可以使用新的切片，原始数组可以被垃圾回收。",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212193205-ucyf9z4",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212193205-ucyf9z4",
				"updated": "20211212193243"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "数组与切片的区别在于切片由以下方法产生",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212193215-q3c93dm",
			"Type": "NodeList",
			"ListData": {
				"Typ": 1,
				"Tight": true,
				"Start": 1,
				"Delimiter": 46,
				"Padding": 3,
				"Marker": "MQ==",
				"Num": 1
			},
			"Properties": {
				"id": "20211212193215-q3c93dm",
				"updated": "20211212193343"
			},
			"Children": [
				{
					"ID": "20211212193217-rxpdnvq",
					"Type": "NodeListItem",
					"Data": "1",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 1,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "MQ==",
						"Num": 1
					},
					"Properties": {
						"id": "20211212193217-rxpdnvq",
						"updated": "20211212193217"
					},
					"Children": [
						{
							"ID": "20211212193217-u3eoai5",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211212193217-u3eoai5",
								"updated": "20211212193245"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过数组创建一个切片",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20211212193246-obfpnp8",
					"Type": "NodeListItem",
					"Data": "2",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 2,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mg==",
						"Num": 2
					},
					"Properties": {
						"id": "20211212193246-obfpnp8",
						"updated": "20211212193343"
					},
					"Children": [
						{
							"ID": "20211212193246-fopsvx6",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211212193246-fopsvx6",
								"updated": "20211212193343"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "直接声明一个切片 a :=[]int {} vs 数组的 a:=[...]int{}",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20211212193300-ehbl2as",
					"Type": "NodeListItem",
					"Data": "3",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 3,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "Mw==",
						"Num": 3
					},
					"Properties": {
						"id": "20211212193300-ehbl2as",
						"updated": "20211212193300"
					},
					"Children": [
						{
							"ID": "20211212193300-9285kei",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211212193300-9285kei",
								"updated": "20211212193303"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "通过 make",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				},
				{
					"ID": "20211212193304-bcnbf98",
					"Type": "NodeListItem",
					"Data": "4",
					"ListData": {
						"Typ": 1,
						"Tight": true,
						"Start": 4,
						"Delimiter": 46,
						"Padding": 3,
						"Marker": "NA==",
						"Num": 4
					},
					"Properties": {
						"id": "20211212193304-bcnbf98",
						"updated": "20211212193309"
					},
					"Children": [
						{
							"ID": "20211212193304-skjx4ke",
							"Type": "NodeParagraph",
							"Properties": {
								"id": "20211212193304-skjx4ke",
								"updated": "20211212193309"
							},
							"Children": [
								{
									"Type": "NodeText",
									"Data": "切片生切片",
									"Properties": {
										"id": ""
									}
								}
							]
						}
					]
				}
			]
		},
		{
			"ID": "20211212193621-9444ffz",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20211212193621-9444ffz",
				"updated": "20211212193628"
			},
			"Children": [
				{
					"Type": "NodeText",
					"Data": "切片删除",
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20211212193629-znsbwbd",
			"Type": "NodeCodeBlock",
			"IsFencedCodeBlock": true,
			"CodeBlockFenceChar": 96,
			"CodeBlockFenceLen": 3,
			"CodeBlockOpenFence": "YGBg",
			"CodeBlockInfo": "Z28=",
			"CodeBlockCloseFence": "YGBg",
			"Properties": {
				"id": "20211212193629-znsbwbd",
				"updated": "20211212193634"
			},
			"Children": [
				{
					"Type": "NodeCodeBlockFenceOpenMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceInfoMarker",
					"CodeBlockInfo": "Z28=",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockCode",
					"Data": "//我们创建了一个切片，有四个元素，下标命名为0，1，2，3\nslice11 := []int{1,2,3,4} \n//假设我们要删除下标为0的元素，这段代码的含义是\n创建一个空的切片 slice11[:0]\n创建一个从下标1到末尾元素的切片 slice11[1:]\n给空切片添加元素并返回一个新的切片\nslice12 := append(slice11[:0],slice11[1:]...)\n//同上我们得出删除下标为i的元素的切片的公式时\nsliceTemp := append(slice11[:i],slice[i+1:]...)\n",
					"Properties": {
						"id": ""
					}
				},
				{
					"Type": "NodeCodeBlockFenceCloseMarker",
					"Data": "```",
					"CodeBlockFenceLen": 3,
					"Properties": {
						"id": ""
					}
				}
			]
		},
		{
			"ID": "20221031082427-5mhheqh",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221031082427-5mhheqh",
				"updated": "20221031082709"
			}
		},
		{
			"ID": "20221031083450-rnodz36",
			"Type": "NodeParagraph",
			"Properties": {
				"id": "20221031083450-rnodz36",
				"updated": "20221031083500"
			}
		}
	]
}